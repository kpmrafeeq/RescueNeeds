@model RescueNeeds.Service.Camp

@{
    ViewBag.Title = "Create";
    var camps = ViewBag.PlaceID as List<RescueNeeds.Service.Place>;
}
<div class="card mb-3">
    <div class="card-header">
        <i class="fas fa-table"></i>
        Create
    </div>
    <div class="card-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Camp</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictID, "DistrictID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DistrictID", null ,optionLabel: "Select", htmlAttributes: new { @class = "form-control district-data" })
                        @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.PlaceID, "PlaceID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select class="form-control place-list" id="PlaceID" name="PlaceID">
                            <option value="" class="default">Select place</option>
                            @foreach (var item in camps.OrderBy(x=>x.Name).GroupBy(y=>y.District.Name))
                            {
                               foreach (var place in item)
                               {
                                <option value="@place.PlaceID" data-district="@place.DistrictID">@place.Name</option>
                               }
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.PlaceID, "", new { @class = "text-danger" })
                    </div>
                </div>

               
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
