@model RescueNeeds.Service.CampRequirement
@{
    ViewBag.Title = "Create";
    var camps = ViewBag.CampsID as List<RescueNeeds.Service.Camp>;
}

<div class="card mb-3">
    <div class="card-header">
        <i class="fas fa-table"></i>
        Create
    </div>
    <div class="card-body">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>CampRequirement</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.CampsID, "CampsID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select name="CampsID" id="CampsID" class="form-control" required="required"> 
                            @foreach (var camp in camps)
                            {
                                <option value="@camp.CampsID">@camp.Name</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.CampsID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemID, "ItemID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Need, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Need, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Need, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Recieved, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Recieved, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Recieved, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
